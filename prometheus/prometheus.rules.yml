groups:
- name: scylla.rules
  rules:
  - record: cql:all_shardrate1m
    expr: sum(rate(scylla_cql_reads[60s])) by (cluster, dc, instance, shard) + sum(rate(scylla_cql_inserts[60s]) ) by (cluster, dc, instance, shard) + sum( rate(scylla_cql_updates[60s]) ) by (cluster, dc, instance, shard) + sum( rate(scylla_cql_deletes[60s])) by (cluster, dc, instance, shard)
  - record: cql:all_system_shardrate1m
    expr: sum(rate(scylla_cql_reads_per_ks{ks="system"}[60s])) by (cluster, dc, instance, shard) + sum(rate(scylla_cql_inserts_per_ks{ks="system"}[60s]) ) by (cluster, dc, instance, shard) + sum( rate(scylla_cql_updates_per_ks{ks="system"}[60s]) ) by (cluster, dc, instance, shard) + sum( rate(scylla_cql_deletes_per_ks{ks="system"}[60s])) by (cluster, dc, instance, shard)
  - record: cql:all_rate1m
    expr: sum(cql:all_shardrate1m) by (cluster, dc, instance)
  - record: cql:non_token_aware
    expr: (sum(cql:all_rate1m) by (cluster) >bool 10) * (1-(sum(rate(scylla_storage_proxy_coordinator_reads_local_node{}[60s]))  by (cluster)+ sum(rate(scylla_storage_proxy_coordinator_total_write_attempts_local_node{}[60s]))  by (cluster)) / sum(cql:all_rate1m)  by (cluster))
  - record: cql:non_system_prepared1m
    expr: clamp_min(sum(rate(scylla_query_processor_statements_prepared[1m])) by (cluster, dc, instance, shard) - cql:all_system_shardrate1m, 0)
  - record: cql:non_prepared
    expr: (sum(cql:non_system_prepared1m) by (cluster) >bool 10) * (sum(cql:non_system_prepared1m)  by (cluster) / clamp_min(sum(cql:all_rate1m) - sum(cql:all_system_shardrate1m) by (cluster), 0.001))
  - record: cql:non_paged_no_system
    expr: clamp_min(sum(rate(scylla_cql_unpaged_select_queries[60s])) by (cluster, dc, instance) - sum(rate(scylla_cql_unpaged_select_queries_per_ks{ks="system"}[60s])) by (cluster, dc, instance), 0)
  - record: cql:non_paged
    expr: sum(rate(scylla_cql_unpaged_select_queries[60s])) by (cluster)/sum(rate(scylla_cql_reads{}[60s])) by (cluster)
  - record: cql:reverse_queries
    expr: sum(rate(scylla_cql_reverse_queries[60s])) by  (cluster)/ sum(rate(scylla_cql_reads[60s])) by  (cluster)
  - record: cql:allow_filtering
    expr: sum(rate(scylla_cql_filtered_read_requests[60s])) by  (cluster)/ sum(rate(scylla_cql_reads[60s])) by  (cluster)
  - record: cql:any_queries
    expr: sum(rate(scylla_query_processor_queries{consistency_level="ANY"}[60s])) by (cluster) >bool 0
  - record: cql:all_queries
    expr: sum(rate(scylla_query_processor_queries{consistency_level="ALL"}[60s])) by (cluster) >bool 0
  - record: errors:operation_unavailable
    expr: sum(rate(scylla_storage_proxy_coordinator_read_unavailable[60s])) by (cluster, dc, instance) + sum(rate(scylla_storage_proxy_coordinator_write_unavailable[60s])) by (cluster, dc, instance) + sum(rate(scylla_storage_proxy_coordinator_range_unavailable[60s])) by (cluster, dc, instance)
  - record: errors:local_failed
    expr: sum(rate(scylla_storage_proxy_coordinator_read_errors_local_node[60s])) by (cluster, dc, instance) + sum(rate(scylla_storage_proxy_coordinator_write_errors_local_node[60s])) by (cluster, dc, instance)
  - record: errors:nodes_total
    expr: errors:local_failed + errors:operation_unavailable
  - record: cache:hwlb
    expr: sum(rate(scylla_cache_row_hits[1m])) by (cluster, dc, instance)/(sum(rate(scylla_cache_row_hits[1m])) by (cluster, dc, instance) + sum(rate(scylla_cache_row_misses[1m])) by (cluster, dc, instance) + 0.00001)
  - alert: cqlNonPrepared
    expr: cql:non_prepared > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries are non-prepared'
      summary: non prepared statments
  - alert: cqlNonPaged
    expr: cql:non_paged > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
      status: 1
    annotations:
      description: 'Some SELECT queries are non-paged'
      summary: non paged statments
  - alert: cqlNoTokenAware
    expr: cql:non_token_aware > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries are not token-aware'
      summary: non token aware statments
  - alert: cqlReverseOrder
    expr: cql:reverse_queries > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries use reverse order'
      summary: reverse order queries
  - alert: cqlAllowFiltering
    expr: cql:allow_filtering > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries use ALLOW FILTERING'
      summary: Allow filtering queries
  - alert: cqlCLAny
    expr: cql:any_queries > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries use Consistency Level: ANY'
      summary: non prepared statments
  - alert: cqlCLAll
    expr: cql:all_queries > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "cqlOptimization"
      dashboard: "cql"
    annotations:
      description: 'Some queries use Consistency Level: ALL'
      summary: non prepared statments
  - alert: nonBalancedcqlTraffic
    expr: abs(rate(scylla_cql_updates{conditional="no"}[1m]) - scalar(avg(rate(scylla_cql_updates{conditional="no"}[1m]))))/scalar(stddev(rate(scylla_cql_updates{conditional="no"}[1m]))+100) > 2
    for: 10s
    labels:
      severity: "1"
      status: 1
      advisor: "balanced"
      dashboard: "cql"
    annotations:
      description: 'CQL queries are not balanced among shards {{ $labels.instance }} shard {{ $labels.shard }}'
      summary: cql queries are not balanced
  - alert: nodeLocalErrors
    expr: sum(errors:local_failed) by (cluster, instance) > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "operationError"
      dashboard: "scylla-detailed"
    annotations:
      description: 'Some operation failed at the replica side'
      summary: Replica side Level error
  - alert: nodeIOErrors
    expr: sum(rate(scylla_reactor_aio_errors[60s])) by (cluster, instance) > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "operationError"
      dashboard: "OS-master"
    annotations:
      description: 'IO Errors can indicate a node with a faulty disk {{ $labels.instance }}'
      summary: IO Disk Error
  - alert: nodeCLErrors
    expr: sum(errors:operation_unavailable) by (cluster) > 0
    for: 10s
    labels:
      severity: "1"
      advisor: "operationError"
      dashboard: "scylla-detailed"
    annotations:
      description: 'Some operation failed due to consistency level'
      summary: Consistency Level error
  - alert: InstanceDown
    expr: up{job="scylla"} == 0
    for: 30s
    labels:
      severity: "2"
    annotations:
      description: '{{ $labels.instance }} has been down for more than 30 seconds.'
      summary: Instance {{ $labels.instance }} down
  - alert: InstanceDown
    expr: absent(scylla_transport_requests_served{job="scylla", shard="0"})
    for: 1m
    labels:
      severity: "2"
    annotations:
      description: '{{ $labels.instance }} instance is shutting down.'
      summary: Instance {{ $labels.instance }} down
  - alert: InstanceDown
    expr: scylla_node_operation_mode > 3
    for: 30s
    labels:
      severity: "2"
    annotations:
      description: '{{ $labels.instance }} instance is shutting down.'
      summary: Instance {{ $labels.instance }} down
  - alert: DiskFull
    expr: node_filesystem_avail_bytes{mountpoint="/var/lib/scylla"} / node_filesystem_size_bytes{mountpoint="/var/lib/scylla"}
      * 100 < 25
    for: 30s
    labels:
      severity: "2"
    annotations:
      description: '{{ $labels.instance }} has less than 25% free disk space.'
      summary: Instance {{ $labels.instance }} low disk space
  - alert: DiskFull
    expr: node_filesystem_avail_bytes{mountpoint="/var/lib/scylla"} / node_filesystem_size_bytes{mountpoint="/var/lib/scylla"}
      * 100 < 10
    for: 30s
    labels:
      severity: "3"
    annotations:
      description: '{{ $labels.instance }} has less than 10% free disk space.'
      summary: Instance {{ $labels.instance }} low disk space
  - alert: DiskFull
    expr: node_filesystem_avail_bytes{mountpoint="/var/lib/scylla"} / node_filesystem_size_bytes{mountpoint="/var/lib/scylla"}
      * 100 < 1
    for: 30s
    labels:
      severity: "4"
    annotations:
      description: '{{ $labels.instance }} has less than 1% free disk space.'
      summary: Instance {{ $labels.instance }} low disk space
  - alert: DiskFull
    expr: node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}
      * 100 < 20
    for: 30s
    labels:
      severity: "3"
    annotations:
      description: '{{ $labels.instance }} has less than 20% free disk space on the root partition.'
      summary: Instance {{ $labels.instance }} low disk space
  - alert: NoCql
    expr: scylla_manager_healthcheck_cql_status == -1
    for: 30s
    labels:
      severity: "2"
    annotations:
      description: '{{ $labels.host }} has denied cql connection for more than 30 seconds.'
      summary: Instance {{ $labels.host }} no cql connection
  - alert: HighLatencies
    expr: histogram_quantile(0.95, sum(rate(scylla_storage_proxy_coordinator_write_latency_bucket{scheduling_group_name=~"statement|$"}[300s])) by (instance, le)) > 100000
    for: 5m
    labels:
      severity: "1"
    annotations:
      description: '{{ $labels.instance }} has 95% high latency for more than 5 minutes.'
      summary: Instance {{ $labels.instance }} Hight Write Latency
  - alert: HighLatencies
    expr: sum(rate(scylla_storage_proxy_coordinator_write_latency_sum[60s]))by (instance)/sum(rate(scylla_storage_proxy_coordinator_write_latency_count[60s]))by (instance) >10000
    for: 5m
    labels:
      severity: "1"
    annotations:
      description: '{{ $labels.instance }} has average high latency for more than 5 minutes.'
      summary: Instance {{ $labels.instance }} Hight Write  Latency
  - alert: HighLatencies
    expr: histogram_quantile(0.95, sum(rate(scylla_storage_proxy_coordinator_read_latency_bucket{scheduling_group_name=~"statement|$"}[300s])) by (instance, le)) > 100000
    for: 5m
    labels:
      severity: "1"
    annotations:
      description: '{{ $labels.instance }} has 95% high latency for more than 5 minutes.'
      summary: Instance {{ $labels.instance }} Hight Read Latency
  - alert: HighLatencies
    expr: sum(rate(scylla_storage_proxy_coordinator_read_latency_sum[60s]))by (instance)/sum(rate(scylla_storage_proxy_coordinator_read_latency_count[60s]))by (instance) >10000
    for: 5m
    labels:
      severity: "1"
    annotations:
      description: '{{ $labels.instance }} has average high latency for more than 5 minutes.'
      summary: Instance {{ $labels.instance }} Hight Read  Latency
  - alert: BackupFailed
    expr: (sum(scylla_manager_task_run_total{type=~"backup", status="ERROR"}) or vector(0)) - (sum(scylla_manager_task_run_total{type=~"backup", status="ERROR"} offset 3m) or vector(0)) > 0
    for: 10s
    labels:
      severity: "1"
    annotations:
      description: 'Backup failed'
      summary: Backup task failed
  - alert: RepairFailed
    expr: (sum(scylla_manager_task_run_total{type=~"repair", status="ERROR"}) or vector(0)) - (sum(scylla_manager_task_run_total{type=~"repair", status="ERROR"} offset 3m) or vector(0)) > 0
    for: 10s
    labels:
      severity: "1"
    annotations:
      description: 'Repair failed'
      summary: Repair task failed
  - alert: restart
    expr: resets(scylla_gossip_heart_beat[1h])>0
    for: 10s
    labels:
      severity: "1"
    annotations:
      description: 'node restarted'
      summary: Instance {{ $labels.instance }} restarted
  - alert: oomKill
    expr: changes(node_vmstat_oom_kill[1h])>0
    for: 10s
    labels:
      severity: "2"
    annotations:
      description: 'OOM Kill on {{ $labels.instance }}'
      summary: A process was terminate on Instance {{ $labels.instance }}
